//
// File generated by rootcint at Fri Mar 28 13:04:54 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME MyDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MyDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void DetectorPadGeometry_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DetectorPadGeometry(void *p = 0);
   static void *newArray_DetectorPadGeometry(Long_t size, void *p);
   static void delete_DetectorPadGeometry(void *p);
   static void deleteArray_DetectorPadGeometry(void *p);
   static void destruct_DetectorPadGeometry(void *p);
   static void directoryAutoAdd_DetectorPadGeometry(void *obj, TDirectory *dir);
   static void streamer_DetectorPadGeometry(TBuffer &buf, void *obj);
   static Long64_t merge_DetectorPadGeometry(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DetectorPadGeometry*)
   {
      ::DetectorPadGeometry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DetectorPadGeometry >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DetectorPadGeometry", ::DetectorPadGeometry::Class_Version(), "./DetectorPadGeometry.h", 6,
                  typeid(::DetectorPadGeometry), DefineBehavior(ptr, ptr),
                  &::DetectorPadGeometry::Dictionary, isa_proxy, 0,
                  sizeof(::DetectorPadGeometry) );
      instance.SetNew(&new_DetectorPadGeometry);
      instance.SetNewArray(&newArray_DetectorPadGeometry);
      instance.SetDelete(&delete_DetectorPadGeometry);
      instance.SetDeleteArray(&deleteArray_DetectorPadGeometry);
      instance.SetDestructor(&destruct_DetectorPadGeometry);
      instance.SetDirectoryAutoAdd(&directoryAutoAdd_DetectorPadGeometry);
      instance.SetStreamerFunc(&streamer_DetectorPadGeometry);
      instance.SetMerge(&merge_DetectorPadGeometry);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DetectorPadGeometry*)
   {
      return GenerateInitInstanceLocal((::DetectorPadGeometry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DetectorPadGeometry*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *DetectorPadGeometry::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *DetectorPadGeometry::Class_Name()
{
   return "DetectorPadGeometry";
}

//______________________________________________________________________________
const char *DetectorPadGeometry::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DetectorPadGeometry*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DetectorPadGeometry::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DetectorPadGeometry*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DetectorPadGeometry::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DetectorPadGeometry*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DetectorPadGeometry::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DetectorPadGeometry*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void DetectorPadGeometry::Streamer(TBuffer &R__b)
{
   // Stream an object of class DetectorPadGeometry.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TH2Poly::Streamer(R__b);
      R__b >> numberOfPads;
      R__b >> numberOfRows;
      //R__b.ReadArray(numberOfColumns);
      //R__b.ReadArray(padSizeX);
      //R__b.ReadArray(padSizeY);
      R__b >> X0;
      R__b >> Xf;
      R__b >> Y0;
      R__b >> Yf;
      R__b.CheckByteCount(R__s, R__c, DetectorPadGeometry::IsA());
   } else {
      R__c = R__b.WriteVersion(DetectorPadGeometry::IsA(), kTRUE);
      TH2Poly::Streamer(R__b);
      R__b << numberOfPads;
      R__b << numberOfRows;
      //R__b.WriteArray(numberOfColumns, __COUNTER__);
      //R__b.WriteArray(padSizeX, __COUNTER__);
      //R__b.WriteArray(padSizeY, __COUNTER__);
      R__b << X0;
      R__b << Xf;
      R__b << Y0;
      R__b << Yf;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void DetectorPadGeometry::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DetectorPadGeometry.
      TClass *R__cl = ::DetectorPadGeometry::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberOfPads", &numberOfPads);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberOfRows", &numberOfRows);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*numberOfColumns", &numberOfColumns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*padSizeX", &padSizeX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*padSizeY", &padSizeY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X0", &X0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Xf", &Xf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Y0", &Y0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Yf", &Yf);
      TH2Poly::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DetectorPadGeometry(void *p) {
      return  p ? new(p) ::DetectorPadGeometry : new ::DetectorPadGeometry;
   }
   static void *newArray_DetectorPadGeometry(Long_t nElements, void *p) {
      return p ? new(p) ::DetectorPadGeometry[nElements] : new ::DetectorPadGeometry[nElements];
   }
   // Wrapper around operator delete
   static void delete_DetectorPadGeometry(void *p) {
      delete ((::DetectorPadGeometry*)p);
   }
   static void deleteArray_DetectorPadGeometry(void *p) {
      delete [] ((::DetectorPadGeometry*)p);
   }
   static void destruct_DetectorPadGeometry(void *p) {
      typedef ::DetectorPadGeometry current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the directory auto add.
   static void directoryAutoAdd_DetectorPadGeometry(void *p, TDirectory *dir) {
      ((::DetectorPadGeometry*)p)->DirectoryAutoAdd(dir);
   }
   // Wrapper around a custom streamer member function.
   static void streamer_DetectorPadGeometry(TBuffer &buf, void *obj) {
      ((::DetectorPadGeometry*)obj)->::DetectorPadGeometry::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_DetectorPadGeometry(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::DetectorPadGeometry*)obj)->Merge(coll);
   }
} // end of namespace ROOT for class ::DetectorPadGeometry

/********************************************************
* MyDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMyDict();

extern "C" void G__set_cpp_environmentMyDict() {
  G__cpp_reset_tagtableMyDict();
}
#include <new>
extern "C" int G__cpp_dllrevMyDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* DetectorPadGeometry */
static int G__MyDict_270_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DetectorPadGeometry* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DetectorPadGeometry[n];
     } else {
       p = new((void*) gvp) DetectorPadGeometry[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DetectorPadGeometry;
     } else {
       p = new((void*) gvp) DetectorPadGeometry;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DetectorPadGeometry* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DetectorPadGeometry((const Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) DetectorPadGeometry((const Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DetectorPadGeometry*) G__getstructoffset())->GetNumberOfPads());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DetectorPadGeometry*) G__getstructoffset())->GetNumberOfRows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DetectorPadGeometry*) G__getstructoffset())->GetNumberOfColumns((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DetectorPadGeometry*) G__getstructoffset())->GetPadSizeX((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DetectorPadGeometry*) G__getstructoffset())->GetPadSizeY((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorPadGeometry*) G__getstructoffset())->SetNumberOfPads((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorPadGeometry*) G__getstructoffset())->SetNumberOfRows((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorPadGeometry*) G__getstructoffset())->SetNumberOfColumns((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorPadGeometry*) G__getstructoffset())->SetPadSizeX((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorPadGeometry*) G__getstructoffset())->SetPadSizeY((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorPadGeometry*) G__getstructoffset())->SetPadSizesX((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorPadGeometry*) G__getstructoffset())->SetPadSizesY((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorPadGeometry*) G__getstructoffset())->SetNumberOfColumns((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DetectorPadGeometry*) G__getstructoffset())->GetRowNumber(*((TVector3*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DetectorPadGeometry*) G__getstructoffset())->GetColumnNumber(*((TVector3*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DetectorPadGeometry*) G__getstructoffset())->CalculatePad((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DetectorPadGeometry*) G__getstructoffset())->CalculatePad(*((TVector3*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorPadGeometry*) G__getstructoffset())->ConstructGeometry();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DetectorPadGeometry::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DetectorPadGeometry::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DetectorPadGeometry::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DetectorPadGeometry::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DetectorPadGeometry*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DetectorPadGeometry::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DetectorPadGeometry::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DetectorPadGeometry::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyDict_270_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DetectorPadGeometry::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MyDict_270_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DetectorPadGeometry* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DetectorPadGeometry(*(DetectorPadGeometry*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DetectorPadGeometry G__TDetectorPadGeometry;
static int G__MyDict_270_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DetectorPadGeometry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DetectorPadGeometry*) (soff+(sizeof(DetectorPadGeometry)*i)))->~G__TDetectorPadGeometry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DetectorPadGeometry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DetectorPadGeometry*) (soff))->~G__TDetectorPadGeometry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* DetectorPadGeometry */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMyDict {
 public:
  G__Sizep2memfuncMyDict(): p(&G__Sizep2memfuncMyDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMyDict::*p)();
};

size_t G__get_sizep2memfuncMyDict()
{
  G__Sizep2memfuncMyDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMyDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry))) {
     DetectorPadGeometry *G__Lderived;
     G__Lderived=(DetectorPadGeometry*)0x1000;
     {
       TH2Poly *G__Lpbase=(TH2Poly*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry),G__get_linked_tagnum(&G__MyDictLN_TH2Poly),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TH2 *G__Lpbase=(TH2*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry),G__get_linked_tagnum(&G__MyDictLN_TH2),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TH1 *G__Lpbase=(TH1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry),G__get_linked_tagnum(&G__MyDictLN_TH1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry),G__get_linked_tagnum(&G__MyDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry),G__get_linked_tagnum(&G__MyDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry),G__get_linked_tagnum(&G__MyDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry),G__get_linked_tagnum(&G__MyDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry),G__get_linked_tagnum(&G__MyDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMyDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MyDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MyDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MyDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MyDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MyDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MyDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MyDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MyDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MyDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MyDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MyDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MyDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MyDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MyDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MyDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MyDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__MyDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* DetectorPadGeometry */
static void G__setup_memvarDetectorPadGeometry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry));
   { DetectorPadGeometry *p; p=(DetectorPadGeometry*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numberOfPads=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numberOfRows=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"numberOfColumns=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"padSizeX=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"padSizeY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"X0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Xf=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Y0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Yf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMyDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDetectorPadGeometry(void) {
   /* DetectorPadGeometry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry));
   G__memfunc_setup("DetectorPadGeometry",1947,G__MyDict_270_0_1, 105, G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetectorPadGeometry",1947,G__MyDict_270_0_2, 105, G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - nrows", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfPads",1478,G__MyDict_270_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfRows",1513,G__MyDict_270_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfColumns",1823,G__MyDict_270_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - row", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPadSizeX",1064,G__MyDict_270_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - row", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPadSizeY",1065,G__MyDict_270_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - row", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberOfPads",1490,G__MyDict_270_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - npads", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberOfRows",1525,G__MyDict_270_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nrows", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberOfColumns",1835,G__MyDict_270_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - row i - 'Int_t' 0 - column", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPadSizeX",1076,G__MyDict_270_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - row i - 'Int_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPadSizeY",1077,G__MyDict_270_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - row i - 'Int_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPadSizesX",1191,G__MyDict_270_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPadSizesY",1192,G__MyDict_270_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberOfColumns",1835,G__MyDict_270_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - column", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRowNumber",1217,G__MyDict_270_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TVector3' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColumnNumber",1527,G__MyDict_270_0_17, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TVector3' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculatePad",1187,G__MyDict_270_0_18, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - row i - 'Int_t' 0 - column", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculatePad",1187,G__MyDict_270_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TVector3' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructGeometry",1809,G__MyDict_270_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBinContent",1277,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - bin d - 'Double_t' 0 - content", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MyDict_270_0_22, 85, G__get_linked_tagnum(&G__MyDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DetectorPadGeometry::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MyDict_270_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DetectorPadGeometry::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MyDict_270_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DetectorPadGeometry::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MyDict_270_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DetectorPadGeometry::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MyDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MyDict_270_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MyDict_270_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DetectorPadGeometry::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MyDict_270_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DetectorPadGeometry::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MyDict_270_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DetectorPadGeometry::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MyDict_270_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DetectorPadGeometry::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DetectorPadGeometry", 1947, G__MyDict_270_0_34, (int) ('i'), G__get_linked_tagnum(&G__MyDictLN_DetectorPadGeometry), -1, 0, 1, 1, 1, 0, "u 'DetectorPadGeometry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DetectorPadGeometry", 2073, G__MyDict_270_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMyDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMyDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMyDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MyDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__MyDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MyDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MyDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__MyDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MyDictLN_TH2Poly = { "TH2Poly" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__MyDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__MyDictLN_DetectorPadGeometry = { "DetectorPadGeometry" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMyDict() {
  G__MyDictLN_TClass.tagnum = -1 ;
  G__MyDictLN_TBuffer.tagnum = -1 ;
  G__MyDictLN_TMemberInspector.tagnum = -1 ;
  G__MyDictLN_TObject.tagnum = -1 ;
  G__MyDictLN_TNamed.tagnum = -1 ;
  G__MyDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MyDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MyDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MyDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MyDictLN_TAttLine.tagnum = -1 ;
  G__MyDictLN_TAttFill.tagnum = -1 ;
  G__MyDictLN_TAttMarker.tagnum = -1 ;
  G__MyDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MyDictLN_TH1.tagnum = -1 ;
  G__MyDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__MyDictLN_TH2.tagnum = -1 ;
  G__MyDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MyDictLN_TH2Poly.tagnum = -1 ;
  G__MyDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__MyDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__MyDictLN_TVector3.tagnum = -1 ;
  G__MyDictLN_DetectorPadGeometry.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMyDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MyDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__MyDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TH1);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TH2);
   G__get_linked_tagnum_fwd(&G__MyDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TH2Poly);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MyDictLN_DetectorPadGeometry),sizeof(DetectorPadGeometry),-1,62720,(char*)NULL,G__setup_memvarDetectorPadGeometry,G__setup_memfuncDetectorPadGeometry);
}
extern "C" void G__cpp_setupMyDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupMyDict()");
  G__set_cpp_environmentMyDict();
  G__cpp_setup_tagtableMyDict();

  G__cpp_setup_inheritanceMyDict();

  G__cpp_setup_typetableMyDict();

  G__cpp_setup_memvarMyDict();

  G__cpp_setup_memfuncMyDict();
  G__cpp_setup_globalMyDict();
  G__cpp_setup_funcMyDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMyDict();
  return;
}
class G__cpp_setup_initMyDict {
  public:
    G__cpp_setup_initMyDict() { G__add_setup_func("MyDict",(G__incsetup)(&G__cpp_setupMyDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMyDict() { G__remove_setup_func("MyDict"); }
};
G__cpp_setup_initMyDict G__cpp_setup_initializerMyDict;

